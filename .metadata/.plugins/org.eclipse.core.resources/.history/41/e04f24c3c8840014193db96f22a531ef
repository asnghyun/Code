package testkim;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.StringTokenizer;
import java.util.Vector;

public class ChatServer {
	static Vector ClientSockets;
	static Vector LoginNames;
	ChatServer() throws Exception{
		ServerSocket soc = new ServerSocket(5000);
		ClientSockets = new Vector();
		LoginNames = new Vector();
		while(true){
			Socket CSoc = soc.accept();
			AcceptClient obClient = new AcceptClient(CSoc);
		}
	}

	public static void main(String[] args) throws Exception{
		
		ChatServer ob = new ChatServer();
		// TODO Auto-generated method stub
	}
	class AcceptClient extends Thread{
		Socket ClientSocket;
		DataInputStream din;
		DataOutputStream dout;
	
		AcceptClient(Socket CSoc) throws Exception{
			ClientSocket = CSoc;
			
			din = new DataInputStream(ClientSocket.getInputStream());
			dout = new DataOutputStream(ClientSocket.getOutputStream());
			
			String loginName = din.readUTF();
			
			System.out.println("User Logged In:"+ loginName);
			LoginNames.add(loginName);
			ClientSockets.add(ClientSocket);
			start();
		}
		public void run(){
			while(true){
				
				try{
					String msgFromClient = new String();
					msgFromClient = din.readUTF();
					StringTokenizer st = new StringTokenizer(msgFromClient);
					String sendto = st.nextToken();
					String MsgType = st.nextToken();
					int iCount= 0;
					
					if(MsgType.equals("LOGOUT")){
						for(iCount=0;iCount<LoginNames.size();iCount++){
							if(LoginNames.elementAt(iCount).equals(sendto)){
								LoginNames.removeElementAt(iCount);
								ClientSockets.removeElementAt(iCount);
								System.out.println("User"+sendto+ "Logged Out...");
								break;
							}
						}
					}else{
						String msg="";
						while(st.hasMoreTokens()){
							msg = msg + "" + st.nextToken();
						}
						for(iCount = 0; iCount<LoginNames.size();iCount++){
							if(LoginNames.elementAt(iCount).equals(sendto)){
								Socket tSoc = (Socket)ClientSockets.elementAt(iCount);
								DataOutputStream tdout = new DataOutputStream(tSoc.getOutputStream());
								tdout.writeUTF(msg);
								break;
							}
						}
						if(iCount==LoginNames.size()){
						dout.writeUTF("I am offline");
					}else {
						
					}
							
						} 
				if(MsgType.equals("LOGOUT")){
					break;
					}
				}catch(Exception ex){
					ex.printStackTrace();
			}
		
		}
	}

	}
}
